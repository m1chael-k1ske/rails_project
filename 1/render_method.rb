# renderメソッドとは
  
  呼び出すビューファイルを指定するメソッド
  コントローラーとビューどちらでも使うことができる
  
# レンダリング(rendering)とは
  レンダリングとはビューファイルから最終的にHTMLにコンパイルされたモノをブラウザで読み込んで表示させることを言う
   
   renderメソッドはそのレンダリングする元となるファイルを指定することができるメソッド
   renderメソッドが実行されると現在のHTMLのコードが
   renderメソッドで指定したビューファイルのHTMLに上書きされて表示される
   
# ビューファイルでの書き方

#  <%= render 'ファイル名' %>

# コントローラー内での書き方

  railsではコントローラーの各アクションが動くとアクションと同名のビューファイルがレンダリングされる
 # <例> usersコントローラーのindexアクションが動く、viewsディレクトリ内のusersディレクトリ内のindex.html.erbがレンダリングされる
  この時、アクションに対応するビューレンダリングしたくない時にrenderメソッドを使用する
  
 # 上記の例の場合
 
   render :indexと記述すると（usersコントローラーのindexアクションが動いてviewsディレクトリ内のusersディレクトリ内のindex.html.erbがレンダリングされる）
   
 # template
  
  他のコントローラーのテンプレートを呼び出す時に使用
  render template: "コントローラー名/アクション名"
  
 # <例> usersコントローラーのcreateアクションが動いた後にmessagesコントローラーのshowアクションを表示させたい場合
        
        render template: "messages/show"
        
 # layout
 
   layoutを呼び出す（app/views/layoutsの中から）
   layoutとは1つのビューファイルではなく、「application.html.erb」のような複数のビューで使われるレイアウト
   コントローラー単位でレイアウトを切り替える場合はコントローラーに下記の様に記述
   
   layout "レイアウト名"
   
   コントローラーの各アクションでレイアウトを指定する場合は下記の様に記述
   
   render layout: "レイアウト名"
   
 # file
 
   アプリケーション外のテンプレートを表示させる時に使用
   
   render file: "別アプリの呼び出したいテンプレートファイルのパス"
   
# text(ビューファイルに記述)
  
  文字列を直接表示させる
  #<%= render text: "アウトプット" %>
  # => アウトプット